'use strict';

var utils = require('./utils');
var Message = require('./message');
var Colorizer = require('./colorizer');

function configuredFormatter(_ref) {
  var colors = _ref.colors;

  /**
   * @param {Object} options
   * @return {string}
   */
  return function formatter(options) {
    var meta = options.meta;
    var level = options.level;
    var label = options.label;
    var message = options.message;
    var timestamp = options.timestamp;
    var from = meta.from;
    var stack = meta.stack;
    var trace = meta.trace;
    var objectMessage = meta.message;

    delete meta.from;
    delete meta.message;
    delete meta.stack;
    delete meta.trace;

    var formattedMessage = new Message().setColorizer(new Colorizer(colors)).setTime(timestamp).setLabel(label).setLevel(level).setFrom(from).setMessage(message || objectMessage).toString();

    formattedMessage += utils.getStackTrace(stack || trace);
    formattedMessage += utils.metaToYAML(meta);

    return formattedMessage;
  };
}

module.exports = {
  config: function config() {
    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

    var _config = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

    return Object.assign({ timestamp: utils.getISOTime }, options, {
      formatter: configuredFormatter(_config)
    });
  }
};